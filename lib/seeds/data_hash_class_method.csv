class_name,method_array_list
ARGF,"[""#argv"", ""#binmode"", ""#binmode?"", ""#bytes"", ""#chars"", ""#close"", ""#closed?"", ""#codepoints"", ""#each"", ""#each_byte"", ""#each_char"", ""#each_codepoint"", ""#each_line"", ""#eof"", ""#eof?"", ""#external_encoding"", ""#file"", ""#filename"", ""#fileno"", ""#getbyte"", ""#getc"", ""#gets"", ""#inplace_mode"", ""#inplace_mode="", ""#inspect"", ""#internal_encoding"", ""#lineno"", ""#lineno="", ""#lines"", ""#path"", ""#pos"", ""#pos="", ""#print"", ""#printf"", ""#putc"", ""#puts"", ""#read"", ""#read_nonblock"", ""#readbyte"", ""#readchar"", ""#readline"", ""#readlines"", ""#readpartial"", ""#rewind"", ""#seek"", ""#set_encoding"", ""#skip"", ""#tell"", ""#to_a"", ""#to_i"", ""#to_io"", ""#to_s"", ""#to_write_io"", ""#write""]"
ArgumentError,"[""none""]"
Array,"[""::[]"", ""::new"", ""::try_convert"", ""#&"", ""#*"", ""#+"", ""#-"", ""#<<"", ""#<=>"", ""#=="", ""#[]"", ""#[]="", ""#any?"", ""#append"", ""#assoc"", ""#at"", ""#bsearch"", ""#bsearch_index"", ""#clear"", ""#collect"", ""#collect!"", ""#combination"", ""#compact"", ""#compact!"", ""#concat"", ""#count"", ""#cycle"", ""#delete"", ""#delete_at"", ""#delete_if"", ""#dig"", ""#drop"", ""#drop_while"", ""#each"", ""#each_index"", ""#empty?"", ""#eql?"", ""#fetch"", ""#fill"", ""#find_index"", ""#first"", ""#flatten"", ""#flatten!"", ""#frozen?"", ""#hash"", ""#include?"", ""#index"", ""#initialize_copy"", ""#insert"", ""#inspect"", ""#join"", ""#keep_if"", ""#last"", ""#length"", ""#map"", ""#map!"", ""#max"", ""#min"", ""#pack"", ""#permutation"", ""#pop"", ""#prepend"", ""#product"", ""#push"", ""#rassoc"", ""#reject"", ""#reject!"", ""#repeated_combination"", ""#repeated_permutation"", ""#replace"", ""#reverse"", ""#reverse!"", ""#reverse_each"", ""#rindex"", ""#rotate"", ""#rotate!"", ""#sample"", ""#select"", ""#select!"", ""#shift"", ""#shuffle"", ""#shuffle!"", ""#size"", ""#slice"", ""#slice!"", ""#sort"", ""#sort!"", ""#sort_by!"", ""#sum"", ""#take"", ""#take_while"", ""#to_a"", ""#to_ary"", ""#to_h"", ""#to_s"", ""#transpose"", ""#uniq"", ""#uniq!"", ""#unshift"", ""#values_at"", ""#zip"", ""#|""]"
BasicObject,"[""::new"", ""#!"", ""#!="", ""#=="", ""#__id__"", ""#__send__"", ""#equal?"", ""#instance_eval"", ""#instance_exec"", ""#method_missing"", ""#singleton_method_added"", ""#singleton_method_removed"", ""#singleton_method_undefined""]"
Binding,"[""#eval"", ""#irb"", ""#local_variable_defined?"", ""#local_variable_get"", ""#local_variable_set"", ""#local_variables"", ""#receiver""]"
Class,"[""::new"", ""#allocate"", ""#inherited"", ""#new"", ""#superclass""]"
ClosedQueueError,"[""none""]"
Complex,"[""CLASS Complex::compatible"", ""::polar"", ""::rect"", ""::rectangular"", ""#*"", ""#**"", ""#+"", ""#-"", ""#-@"", ""#/"", ""#=="", ""#abs"", ""#abs2"", ""#angle"", ""#arg"", ""#conj"", ""#conjugate"", ""#denominator"", ""#fdiv"", ""#finite?"", ""#imag"", ""#imaginary"", ""#infinite?"", ""#inspect"", ""#magnitude"", ""#numerator"", ""#phase"", ""#polar"", ""#quo"", ""#rationalize"", ""#real"", ""#real?"", ""#rect"", ""#rectangular"", ""#to_c"", ""#to_f"", ""#to_i"", ""#to_r"", ""#to_s""]"
Complex::compatible,"[""none""]"
ConditionVariable,"[""::new"", ""#broadcast"", ""#signal"", ""#wait""]"
Continuation,"[""#[]"", ""#call""]"
Data,"[""none""]"
Dir,"[""::[]"", ""::chdir"", ""::chroot"", ""::delete"", ""::empty?"", ""::entries"", ""::exist?"", ""::exists?"", ""::foreach"", ""::getwd"", ""::glob"", ""::home"", ""::mkdir"", ""::new"", ""::open"", ""::pwd"", ""::rmdir"", ""::unlink"", ""#close"", ""#each"", ""#fileno"", ""#inspect"", ""#path"", ""#pos"", ""#pos="", ""#read"", ""#rewind"", ""#seek"", ""#tell"", ""#to_path""]"
ENV,"[""::[]"", ""::[]="", ""::assoc"", ""::clear"", ""::delete"", ""::delete_if"", ""::each"", ""::each_key"", ""::each_pair"", ""::each_value"", ""::empty?"", ""::fetch"", ""::has_key?"", ""::has_value?"", ""::include?"", ""::index"", ""::inspect"", ""::invert"", ""::keep_if"", ""::key"", ""::key?"", ""::keys"", ""::length"", ""::member?"", ""::rassoc"", ""::rehash"", ""::reject"", ""::reject!"", ""::replace"", ""::select"", ""::select!"", ""::shift"", ""::size"", ""::store"", ""::to_a"", ""::to_h"", ""::to_hash"", ""::to_s"", ""::update"", ""::value?"", ""::values"", ""::values_at""]"
EOFError,"[""none""]"
Encoding,"[""CLASS Encoding::CompatibilityError"", ""CLASS Encoding::Converter"", ""CLASS Encoding::ConverterNotFoundError"", ""CLASS Encoding::InvalidByteSequenceError"", ""CLASS Encoding::UndefinedConversionError"", ""::aliases"", ""::compatible?"", ""::default_external"", ""::default_external="", ""::default_internal"", ""::default_internal="", ""::find"", ""::list"", ""::locale_charmap"", ""::name_list"", ""#ascii_compatible?"", ""#dummy?""]"
Encoding::CompatibilityError,"[""none""]"
Encoding::Converter,"[""::asciicompat_encoding"", ""::new"", ""::search_convpath"", ""#=="", ""#convert"", ""#convpath"", ""#destination_encoding"", ""#finish"", ""#insert_output"", ""#inspect"", ""#last_error"", ""#primitive_convert"", ""#primitive_errinfo"", ""#putback"", ""#replacement"", ""#replacement="", ""#source_encoding""]"
Encoding::ConverterNotFoundError,"[""none""]"
Encoding::InvalidByteSequenceError,"[""#destination_encoding"", ""#destination_encoding_name"", ""#error_bytes"", ""#incomplete_input?"", ""#readagain_bytes"", ""#source_encoding"", ""#source_encoding_name""]"
Encoding::UndefinedConversionError,"[""#destination_encoding"", ""#destination_encoding_name"", ""#error_char"", ""#source_encoding"", ""#source_encoding_name""]"
EncodingError,"[""none""]"
Enumerator,"[""CLASS Enumerator::Generator"", ""CLASS Enumerator::Lazy"", ""CLASS Enumerator::Yielder"", ""::new"", ""#each"", ""#each_with_index"", ""#each_with_object"", ""#feed"", ""#inspect"", ""#next"", ""#next_values"", ""#peek"", ""#peek_values"", ""#rewind""]"
Enumerator::Generator,"[""none""]"
Enumerator::Lazy,"[""::new"", ""#chunk"", ""#chunk_while"", ""#collect"", ""#collect_concat"", ""#drop"", ""#drop_while"", ""#enum_for"", ""#find_all"", ""#flat_map"", ""#grep"", ""#grep_v"", ""#lazy"", ""#map"", ""#reject"", ""#select"", ""#slice_after"", ""#slice_before"", ""#slice_when"", ""#take"", ""#take_while"", ""#to_enum"", ""#uniq"", ""#zip""]"
Enumerator::Yielder,"[""none""]"
Exception,"[""::exception"", ""::new"", ""#=="", ""#backtrace"", ""#backtrace_locations"", ""#cause"", ""#exception"", ""#inspect"", ""#message"", ""#set_backtrace"", ""#to_s""]"
FalseClass,"[""#&"", ""#==="", ""#^"", ""#inspect"", ""#to_s"", ""#|""]"
Fiber,"[""::current"", ""::yield"", ""#alive?"", ""#resume"", ""#transfer""]"
FiberError,"[""none""]"
File,"[""CLASS File::Stat"", ""::absolute_path"", ""::atime"", ""::basename"", ""::birthtime"", ""::blockdev?"", ""::chardev?"", ""::chmod"", ""::chown"", ""::ctime"", ""::delete"", ""::directory?"", ""::dirname"", ""::empty?"", ""::executable?"", ""::executable_real?"", ""::exist?"", ""::exists?"", ""::expand_path"", ""::extname"", ""::file?"", ""::fnmatch"", ""::fnmatch?"", ""::ftype"", ""::grpowned?"", ""::identical?"", ""::join"", ""::lchmod"", ""::lchown"", ""::link"", ""::lstat"", ""::mkfifo"", ""::mtime"", ""::new"", ""::open"", ""::owned?"", ""::path"", ""::pipe?"", ""::readable?"", ""::readable_real?"", ""::readlink"", ""::realdirpath"", ""::realpath"", ""::rename"", ""::setgid?"", ""::setuid?"", ""::size"", ""::size?"", ""::socket?"", ""::split"", ""::stat"", ""::sticky?"", ""::symlink"", ""::symlink?"", ""::truncate"", ""::umask"", ""::unlink"", ""::utime"", ""::world_readable?"", ""::world_writable?"", ""::writable?"", ""::writable_real?"", ""::zero?"", ""#atime"", ""#birthtime"", ""#chmod"", ""#chown"", ""#ctime"", ""#flock"", ""#lstat"", ""#mtime"", ""#path"", ""#size"", ""#to_path""]"
File::Stat,"[""::new"", ""#<=>"", ""#atime"", ""#birthtime"", ""#blksize"", ""#blockdev?"", ""#blocks"", ""#chardev?"", ""#ctime"", ""#dev"", ""#dev_major"", ""#dev_minor"", ""#directory?"", ""#executable?"", ""#executable_real?"", ""#file?"", ""#ftype"", ""#gid"", ""#grpowned?"", ""#ino"", ""#inspect"", ""#mode"", ""#mtime"", ""#nlink"", ""#owned?"", ""#pipe?"", ""#rdev"", ""#rdev_major"", ""#rdev_minor"", ""#readable?"", ""#readable_real?"", ""#setgid?"", ""#setuid?"", ""#size"", ""#size?"", ""#socket?"", ""#sticky?"", ""#symlink?"", ""#uid"", ""#world_readable?"", ""#world_writable?"", ""#writable?"", ""#writable_real?"", ""#zero?""]"
Float,"[""#%"", ""#*"", ""#**"", ""#+"", ""#-"", ""#-@"", ""#/"", ""#<"", ""#<="", ""#<=>"", ""#=="", ""#==="", ""#>"", ""#>="", ""#abs"", ""#angle"", ""#arg"", ""#ceil"", ""#coerce"", ""#denominator"", ""#divmod"", ""#eql?"", ""#fdiv"", ""#finite?"", ""#floor"", ""#hash"", ""#infinite?"", ""#inspect"", ""#magnitude"", ""#modulo"", ""#nan?"", ""#negative?"", ""#next_float"", ""#numerator"", ""#phase"", ""#positive?"", ""#prev_float"", ""#quo"", ""#rationalize"", ""#round"", ""#to_f"", ""#to_i"", ""#to_int"", ""#to_r"", ""#to_s"", ""#truncate"", ""#zero?""]"
FloatDomainError,"[""none""]"
Hash,"[""::[]"", ""::new"", ""::try_convert"", ""#<"", ""#<="", ""#=="", ""#>"", ""#>="", ""#[]"", ""#[]="", ""#any?"", ""#assoc"", ""#clear"", ""#compact"", ""#compact!"", ""#compare_by_identity"", ""#compare_by_identity?"", ""#default"", ""#default="", ""#default_proc"", ""#default_proc="", ""#delete"", ""#delete_if"", ""#dig"", ""#each"", ""#each_key"", ""#each_pair"", ""#each_value"", ""#empty?"", ""#eql?"", ""#fetch"", ""#fetch_values"", ""#flatten"", ""#has_key?"", ""#has_value?"", ""#hash"", ""#include?"", ""#inspect"", ""#invert"", ""#keep_if"", ""#key"", ""#key?"", ""#keys"", ""#length"", ""#member?"", ""#merge"", ""#merge!"", ""#rassoc"", ""#rehash"", ""#reject"", ""#reject!"", ""#replace"", ""#select"", ""#select!"", ""#shift"", ""#size"", ""#store"", ""#to_a"", ""#to_h"", ""#to_hash"", ""#to_proc"", ""#to_s"", ""#transform_values"", ""#transform_values!"", ""#update"", ""#value?"", ""#values"", ""#values_at""]"
IO,"[""MODULE IO::WaitReadable"", ""MODULE IO::WaitWritable"", ""CLASS IO::EAGAINWaitReadable"", ""CLASS IO::EAGAINWaitWritable"", ""CLASS IO::EINPROGRESSWaitReadable"", ""CLASS IO::EINPROGRESSWaitWritable"", ""CLASS IO::EWOULDBLOCKWaitReadable"", ""CLASS IO::EWOULDBLOCKWaitWritable"", ""::binread"", ""::binwrite"", ""::copy_stream"", ""::for_fd"", ""::foreach"", ""::new"", ""::open"", ""::pipe"", ""::popen"", ""::read"", ""::readlines"", ""::select"", ""::sysopen"", ""::try_convert"", ""::write"", ""#<<"", ""#advise"", ""#autoclose="", ""#autoclose?"", ""#binmode"", ""#binmode?"", ""#bytes"", ""#chars"", ""#close"", ""#close_on_exec="", ""#close_on_exec?"", ""#close_read"", ""#close_write"", ""#closed?"", ""#codepoints"", ""#each"", ""#each_byte"", ""#each_char"", ""#each_codepoint"", ""#each_line"", ""#eof"", ""#eof?"", ""#external_encoding"", ""#fcntl"", ""#fdatasync"", ""#fileno"", ""#flush"", ""#fsync"", ""#getbyte"", ""#getc"", ""#gets"", ""#inspect"", ""#internal_encoding"", ""#ioctl"", ""#isatty"", ""#lineno"", ""#lineno="", ""#lines"", ""#pid"", ""#pos"", ""#pos="", ""#print"", ""#printf"", ""#putc"", ""#puts"", ""#read"", ""#read_nonblock"", ""#readbyte"", ""#readchar"", ""#readline"", ""#readlines"", ""#readpartial"", ""#reopen"", ""#rewind"", ""#seek"", ""#set_encoding"", ""#stat"", ""#sync"", ""#sync="", ""#sysread"", ""#sysseek"", ""#syswrite""]"
IO::EAGAINWaitReadable,"[""none""]"
IO::EAGAINWaitWritable,"[""none""]"
IO::EINPROGRESSWaitReadable,"[""none""]"
IO::EINPROGRESSWaitWritable,"[""none""]"
IO::EWOULDBLOCKWaitReadable,"[""none""]"
IO::EWOULDBLOCKWaitWritable,"[""none""]"
IOError,"[""none""]"
IndexError,"[""none""]"
Integer,"[""::sqrt"", ""#%"", ""#&"", ""#*"", ""#**"", ""#+"", ""#-"", ""#-@"", ""#/"", ""#<"", ""#<<"", ""#<="", ""#<=>"", ""#=="", ""#==="", ""#>"", ""#>="", ""#>>"", ""#[]"", ""#^"", ""#abs"", ""#bit_length"", ""#ceil"", ""#chr"", ""#coerce"", ""#denominator"", ""#digits"", ""#div"", ""#divmod"", ""#downto"", ""#even?"", ""#fdiv"", ""#floor"", ""#gcd"", ""#gcdlcm"", ""#inspect"", ""#integer?"", ""#lcm"", ""#magnitude"", ""#modulo"", ""#next"", ""#numerator"", ""#odd?"", ""#ord"", ""#pred"", ""#rationalize"", ""#remainder"", ""#round"", ""#size"", ""#succ"", ""#times"", ""#to_f"", ""#to_i"", ""#to_int"", ""#to_r"", ""#to_s"", ""#truncate"", ""#upto"", ""#|"", ""#~""]"
Interrupt,"[""none""]"
KeyError,"[""none""]"
LoadError,"[""none""]"
LocalJumpError,"[""#exit_value"", ""#reason""]"
MatchData,"[""#=="", ""#[]"", ""#begin"", ""#captures"", ""#end"", ""#eql?"", ""#hash"", ""#inspect"", ""#length"", ""#named_captures"", ""#names"", ""#offset"", ""#post_match"", ""#pre_match"", ""#regexp"", ""#size"", ""#string"", ""#to_a"", ""#to_s"", ""#values_at""]"
Math::DomainError,"[""none""]"
Method,"[""#=="", ""#[]"", ""#arity"", ""#call"", ""#clone"", ""#curry"", ""#eql?"", ""#hash"", ""#inspect"", ""#name"", ""#original_name"", ""#owner"", ""#parameters"", ""#receiver"", ""#source_location"", ""#super_method"", ""#to_proc"", ""#to_s"", ""#unbind""]"
Module,"[""::constants"", ""::nesting"", ""::new"", ""::used_modules"", ""#<"", ""#<="", ""#<=>"", ""#=="", ""#==="", ""#>"", ""#>="", ""#alias_method"", ""#ancestors"", ""#append_features"", ""#attr"", ""#attr_accessor"", ""#attr_reader"", ""#attr_writer"", ""#autoload"", ""#autoload?"", ""#class_eval"", ""#class_exec"", ""#class_variable_defined?"", ""#class_variable_get"", ""#class_variable_set"", ""#class_variables"", ""#const_defined?"", ""#const_get"", ""#const_missing"", ""#const_set"", ""#constants"", ""#define_method"", ""#deprecate_constant"", ""#extend_object"", ""#extended"", ""#freeze"", ""#include"", ""#include?"", ""#included"", ""#included_modules"", ""#inspect"", ""#instance_method"", ""#instance_methods"", ""#method_added"", ""#method_defined?"", ""#method_removed"", ""#method_undefined"", ""#module_eval"", ""#module_exec"", ""#module_function"", ""#name"", ""#prepend"", ""#prepend_features"", ""#prepended"", ""#private"", ""#private_class_method"", ""#private_constant"", ""#private_instance_methods"", ""#private_method_defined?"", ""#protected"", ""#protected_instance_methods"", ""#protected_method_defined?"", ""#public"", ""#public_class_method"", ""#public_constant"", ""#public_instance_method"", ""#public_instance_methods"", ""#public_method_defined?"", ""#refine"", ""#remove_class_variable"", ""#remove_const"", ""#remove_method"", ""#singleton_class?"", ""#to_s"", ""#undef_method"", ""#using""]"
NameError,"[""::new"", ""#local_variables"", ""#name"", ""#receiver""]"
NilClass,"[""#&"", ""#==="", ""#^"", ""#inspect"", ""#nil?"", ""#rationalize"", ""#to_a"", ""#to_c"", ""#to_f"", ""#to_h"", ""#to_i"", ""#to_r"", ""#to_s"", ""#|""]"
NoMemoryError,"[""none""]"
NoMethodError,"[""::new"", ""#args"", ""#private_call?""]"
NotImplementedError,"[""none""]"
Numeric,"[""#%"", ""#+@"", ""#-@"", ""#<=>"", ""#abs"", ""#abs2"", ""#angle"", ""#arg"", ""#ceil"", ""#clone"", ""#coerce"", ""#conj"", ""#conjugate"", ""#denominator"", ""#div"", ""#divmod"", ""#dup"", ""#eql?"", ""#fdiv"", ""#finite?"", ""#floor"", ""#i"", ""#imag"", ""#imaginary"", ""#infinite?"", ""#integer?"", ""#magnitude"", ""#modulo"", ""#negative?"", ""#nonzero?"", ""#numerator"", ""#phase"", ""#polar"", ""#positive?"", ""#quo"", ""#real"", ""#real?"", ""#rect"", ""#rectangular"", ""#remainder"", ""#round"", ""#singleton_method_added"", ""#step"", ""#to_c"", ""#to_int"", ""#truncate"", ""#zero?""]"
Object,"[""#!~"", ""#<=>"", ""#==="", ""#=~"", ""#class"", ""#clone"", ""#define_singleton_method"", ""#display"", ""#dup"", ""#enum_for"", ""#eql?"", ""#extend"", ""#freeze"", ""#frozen?"", ""#hash"", ""#inspect"", ""#instance_of?"", ""#instance_variable_defined?"", ""#instance_variable_get"", ""#instance_variable_set"", ""#instance_variables"", ""#is_a?"", ""#itself"", ""#kind_of?"", ""#method"", ""#methods"", ""#nil?"", ""#object_id"", ""#private_methods"", ""#protected_methods"", ""#public_method"", ""#public_methods"", ""#public_send"", ""#remove_instance_variable"", ""#respond_to?"", ""#respond_to_missing?"", ""#send"", ""#singleton_class"", ""#singleton_method"", ""#singleton_methods"", ""#taint"", ""#tainted?"", ""#tap"", ""#to_enum"", ""#to_s"", ""#trust"", ""#untaint"", ""#untrust"", ""#untrusted?""]"
ObjectSpace::WeakMap,"[""#[]"", ""#[]="", ""#each"", ""#each_key"", ""#each_pair"", ""#each_value"", ""#finalize"", ""#include?"", ""#inspect"", ""#key?"", ""#keys"", ""#length"", ""#member?"", ""#size"", ""#values""]"
Proc,"[""::new"", ""#==="", ""#[]"", ""#arity"", ""#binding"", ""#call"", ""#curry"", ""#hash"", ""#inspect"", ""#lambda?"", ""#parameters"", ""#source_location"", ""#to_proc"", ""#to_s"", ""#yield""]"
Process::Status,"[""#&"", ""#=="", ""#>>"", ""#coredump?"", ""#exited?"", ""#exitstatus"", ""#inspect"", ""#pid"", ""#signaled?"", ""#stopped?"", ""#stopsig"", ""#success?"", ""#termsig"", ""#to_i"", ""#to_s""]"
Process::Waiter,"[""#pid""]"
Queue,"[""::new"", ""#<<"", ""#clear"", ""#close"", ""#closed?"", ""#deq"", ""#empty?"", ""#enq"", ""#length"", ""#num_waiting"", ""#pop"", ""#push"", ""#shift"", ""#size""]"
Random,"[""MODULE Random::Formatter"", ""::new"", ""::new_seed"", ""::rand"", ""::srand"", ""::urandom"", ""#=="", ""#bytes"", ""#rand""]"
Range,"[""::new"", ""#=="", ""#==="", ""#begin"", ""#bsearch"", ""#cover?"", ""#each"", ""#end"", ""#eql?"", ""#exclude_end?"", ""#first"", ""#hash"", ""#include?"", ""#inspect"", ""#last"", ""#max"", ""#member?"", ""#min"", ""#size"", ""#step"", ""#to_s""]"
RangeError,"[""none""]"
Rational,"[""CLASS Rational::compatible"", ""#*"", ""#**"", ""#+"", ""#-"", ""#-@"", ""#/"", ""#<=>"", ""#=="", ""#abs"", ""#ceil"", ""#denominator"", ""#fdiv"", ""#floor"", ""#inspect"", ""#magnitude"", ""#negative?"", ""#numerator"", ""#positive?"", ""#quo"", ""#rationalize"", ""#round"", ""#to_f"", ""#to_i"", ""#to_r"", ""#to_s""]"
Rational::compatible,"[""none""]"
Regexp,"[""::compile"", ""::escape"", ""::last_match"", ""::new"", ""::quote"", ""::try_convert"", ""::union"", ""#=="", ""#==="", ""#=~"", ""#casefold?"", ""#encoding"", ""#eql?"", ""#fixed_encoding?"", ""#hash"", ""#inspect"", ""#match"", ""#match?"", ""#named_captures"", ""#names"", ""#options"", ""#source"", ""#to_s"", ""#~""]"
RegexpError,"[""none""]"
RubyVM,"[""CLASS RubyVM::InstructionSequence""]"
RubyVM::InstructionSequence,"[""::compile"", ""::compile_file"", ""::compile_option"", ""::compile_option="", ""::disasm"", ""::disassemble"", ""::load_from_binary"", ""::load_from_binary_extra_data"", ""::new"", ""::of"", ""#absolute_path"", ""#base_label"", ""#disasm"", ""#disassemble"", ""#eval"", ""#first_lineno"", ""#inspect"", ""#label"", ""#line_trace_all"", ""#line_trace_specify"", ""#path"", ""#to_a"", ""#to_binary""]"
RuntimeError,"[""none""]"
ScriptError,"[""none""]"
SecurityError,"[""none""]"
SignalException,"[""::new"", ""#signo""]"
SizedQueue,"[""::new"", ""#<<"", ""#clear"", ""#close"", ""#deq"", ""#enq"", ""#max"", ""#max="", ""#num_waiting"", ""#pop"", ""#push"", ""#shift""]"
StandardError,"[""none""]"
StopIteration,"[""#result""]"
String,"[""::new"", ""::try_convert"", ""#%"", ""#*"", ""#+"", ""#+@"", ""#-@"", ""#<<"", ""#<=>"", ""#=="", ""#==="", ""#=~"", ""#[]"", ""#[]="", ""#ascii_only?"", ""#b"", ""#bytes"", ""#bytesize"", ""#byteslice"", ""#capitalize"", ""#capitalize!"", ""#casecmp"", ""#casecmp?"", ""#center"", ""#chars"", ""#chomp"", ""#chomp!"", ""#chop"", ""#chop!"", ""#chr"", ""#clear"", ""#codepoints"", ""#concat"", ""#count"", ""#crypt"", ""#delete"", ""#delete!"", ""#downcase"", ""#downcase!"", ""#dump"", ""#each_byte"", ""#each_char"", ""#each_codepoint"", ""#each_line"", ""#empty?"", ""#encode"", ""#encode!"", ""#encoding"", ""#end_with?"", ""#eql?"", ""#force_encoding"", ""#freeze"", ""#getbyte"", ""#gsub"", ""#gsub!"", ""#hash"", ""#hex"", ""#include?"", ""#index"", ""#initialize_copy"", ""#insert"", ""#inspect"", ""#intern"", ""#length"", ""#lines"", ""#ljust"", ""#lstrip"", ""#lstrip!"", ""#match"", ""#match?"", ""#next"", ""#next!"", ""#oct"", ""#ord"", ""#partition"", ""#prepend"", ""#replace"", ""#reverse"", ""#reverse!"", ""#rindex"", ""#rjust"", ""#rpartition"", ""#rstrip"", ""#rstrip!"", ""#scan"", ""#scrub"", ""#scrub!"", ""#setbyte"", ""#size"", ""#slice"", ""#slice!"", ""#split"", ""#squeeze"", ""#squeeze!"", ""#start_with?"", ""#strip"", ""#strip!"", ""#sub"", ""#sub!"", ""#succ"", ""#succ!"", ""#sum"", ""#swapcase"", ""#swapcase!"", ""#to_c"", ""#to_f"", ""#to_i"", ""#to_r"", ""#to_s"", ""#to_str"", ""#to_sym"", ""#tr"", ""#tr!"", ""#tr_s"", ""#tr_s!"", ""#unpack"", ""#unpack1"", ""#upcase"", ""#upcase!"", ""#upto"", ""#valid_encoding?""]"
Struct,"[""::new"", ""#=="", ""#[]"", ""#[]="", ""#dig"", ""#each"", ""#each_pair"", ""#eql?"", ""#hash"", ""#inspect"", ""#length"", ""#members"", ""#select"", ""#size"", ""#to_a"", ""#to_h"", ""#to_s"", ""#values"", ""#values_at""]"
Symbol,"[""::all_symbols"", ""#<=>"", ""#=="", ""#==="", ""#=~"", ""#[]"", ""#capitalize"", ""#casecmp"", ""#casecmp?"", ""#downcase"", ""#empty?"", ""#encoding"", ""#id2name"", ""#inspect"", ""#intern"", ""#length"", ""#match"", ""#match?"", ""#next"", ""#size"", ""#slice"", ""#succ"", ""#swapcase"", ""#to_proc"", ""#to_s"", ""#to_sym"", ""#upcase""]"
SyntaxError,"[""::new""]"
SystemCallError,"[""::==="", ""::new"", ""#errno""]"
SystemExit,"[""::new"", ""#status"", ""#success?""]"
SystemStackError,"[""none""]"
Thread,"[""CLASS Thread::Backtrace"", ""CLASS Thread::Mutex"", ""::DEBUG"", ""::DEBUG="", ""::abort_on_exception"", ""::abort_on_exception="", ""::current"", ""::exclusive"", ""::exit"", ""::fork"", ""::handle_interrupt"", ""::kill"", ""::list"", ""::main"", ""::new"", ""::pass"", ""::pending_interrupt?"", ""::report_on_exception"", ""::report_on_exception="", ""::start"", ""::stop"", ""#[]"", ""#[]="", ""#abort_on_exception"", ""#abort_on_exception="", ""#add_trace_func"", ""#alive?"", ""#backtrace"", ""#backtrace_locations"", ""#exit"", ""#fetch"", ""#group"", ""#inspect"", ""#join"", ""#key?"", ""#keys"", ""#kill"", ""#name"", ""#name="", ""#pending_interrupt?"", ""#priority"", ""#priority="", ""#raise"", ""#report_on_exception"", ""#report_on_exception="", ""#run"", ""#safe_level"", ""#set_trace_func"", ""#status"", ""#stop?"", ""#terminate"", ""#thread_variable?"", ""#thread_variable_get"", ""#thread_variable_set"", ""#thread_variables""]"
Thread::Backtrace,"[""none""]"
Thread::Backtrace::Location,"[""#absolute_path"", ""#base_label"", ""#inspect"", ""#label"", ""#lineno"", ""#path"", ""#to_s""]"
Thread::Mutex,"[""::new"", ""#lock"", ""#locked?"", ""#owned?"", ""#sleep"", ""#synchronize"", ""#try_lock"", ""#unlock""]"
ThreadError,"[""none""]"
ThreadGroup,"[""#add"", ""#enclose"", ""#enclosed?"", ""#list""]"
Time,"[""::at"", ""::gm"", ""::local"", ""::mktime"", ""::new"", ""::now"", ""::utc"", ""#+"", ""#-"", ""#<=>"", ""#asctime"", ""#ctime"", ""#day"", ""#dst?"", ""#eql?"", ""#friday?"", ""#getgm"", ""#getlocal"", ""#getutc"", ""#gmt?"", ""#gmt_offset"", ""#gmtime"", ""#gmtoff"", ""#hash"", ""#hour"", ""#inspect"", ""#isdst"", ""#localtime"", ""#mday"", ""#min"", ""#mon"", ""#monday?"", ""#month"", ""#nsec"", ""#round"", ""#saturday?"", ""#sec"", ""#strftime"", ""#subsec"", ""#succ"", ""#sunday?"", ""#thursday?"", ""#to_a"", ""#to_f"", ""#to_i"", ""#to_r"", ""#to_s"", ""#tuesday?"", ""#tv_nsec"", ""#tv_sec"", ""#tv_usec"", ""#usec"", ""#utc"", ""#utc?"", ""#utc_offset"", ""#wday"", ""#wednesday?"", ""#yday"", ""#year"", ""#zone""]"
TracePoint,"[""::new"", ""::stat"", ""::trace"", ""#binding"", ""#callee_id"", ""#defined_class"", ""#disable"", ""#enable"", ""#enabled?"", ""#event"", ""#inspect"", ""#lineno"", ""#method_id"", ""#path"", ""#raised_exception"", ""#return_value"", ""#self""]"
TrueClass,"[""#&"", ""#==="", ""#^"", ""#inspect"", ""#to_s"", ""#|""]"
TypeError,"[""none""]"
UnboundMethod,"[""#=="", ""#arity"", ""#bind"", ""#clone"", ""#eql?"", ""#hash"", ""#inspect"", ""#name"", ""#original_name"", ""#owner"", ""#parameters"", ""#source_location"", ""#super_method"", ""#to_s""]"
UncaughtThrowError,"[""::new"", ""#tag"", ""#to_s"", ""#value""]"
ZeroDivisionError,"[""none""]"
fatal,"[""none""]"
